reset;

option omit_zero_rows 1;
option display_eps .001;
option solution_round 3;
option solver gurobi;

model fracture.mod;
data fracture.dat;
data covariates.dat;
data outcome.dat;

problem MAX1: a, b, c, B, C, obj1,defb100, defb101, defc100, defc101, sum1, sum11, sum2, sum22, max_pair, avoid_repeat2, avoid_repeat1, pair_cons ; 
problem MIN1:  a, b, c, B, C, obj2,defb100, defb101, defc100, defc101, sum1, sum11, sum2, sum22, max_pair, avoid_repeat2, avoid_repeat1, pair_cons ; 

for{1..5}{
	
for {i in 1..T1, j in 1..T2}

		{
 
			if (CT[i,"sex"]-CC[j,"sex"])^2 <=36 then 

				{let  NS[i,j]:=0;}
			else
				{let  NS[i,j]:=1;}
		}

	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"fasting_blood_sugar"]-CC[j,"fasting_blood_sugar"])^2<=36 then 

				{let  NBS[i,j]:=0;}
			else
				{let  NBS[i,j]:=1;}
		}

	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"age_(27.999,47.0]"]-CC[j,"age_(27.999,47.0]"])^2<=36 then 

				{let  NA1[i,j]:=0;}
			else
				{let  NA1[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"age_(47.0,54.0]"]-CC[j,"age_(47.0,54.0]"])^2<=36 then 

				{let  NA2[i,j]:=0;}
			else
				{let  NA2[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"age_(54.0,60.0]"]-CC[j,"age_(54.0,60.0]"])^2<=36 then 

				{let  NA3[i,j]:=0;}
			else
				{let  NA3[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"age_(60.0, 77.0]"]-CC[j,"age_(60.0, 77.0]"])^2<=36 then 

				{let  NA4[i,j]:=0;}
			else
				{let  NA4[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"chest pain type_(0.999, 3.0]"]-CC[j,"chest pain type_(0.999, 3.0]"])^2<=36 then 

				{let  NCP1[i,j]:=0;}
			else
				{let  NCP1[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"chest_pain_type_(3.0, 4.0]"]-CC[j,"chest_pain_type_(3.0, 4.0]"])^2<=36 then 

				{let  NA2[i,j]:=0;}
			else
				{let  NA2[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"resting_bp_s_(-0.001,120.0]"]-CC[j,"resting_bp_s_(-0.001,120.0]"])^2<=36 then 

				{let  NBP1[i,j]:=0;}
			else
				{let  NBP1[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"resting_bp_s_(120.0,130.0]"]-CC[j,"resting_bp_s_(120.0,130.0]"])^2<=36 then 

				{let  NBP2[i,j]:=0;}
			else
				{let  NBP2[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"resting_bp_s_(130.0,140.0]"]-CC[j,"resting_bp_s_(130.0,140.0]"])^2<=36 then 

				{let  NBP3[i,j]:=0;}
			else
				{let  NBP3[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"resting_bp_s_(140.0,200.0]"]-CC[j,"resting_bp_s_(140.0,200.0]"])^2<=36 then 

				{let  NBP4[i,j]:=0;}
			else
				{let  NBP4[i,j]:=1;}
		}
	for {i in 1..T1, j in 1..T2}

		{
			if (CT[i,"resting_bp_s_(140.0,200.0]"]-CC[j,"resting_bp_s_(140.0,200.0]"])^2<=36 then 

				{let  NBP4[i,j]:=0;}
			else
				{let  NBP4[i,j]:=1;}
		}
	
let {i in 1..T1, j in 1..T2}DD[i,j]:=NT[i,j]+NW[i,j]+NH[i,j]+NB[i,j];


	for {i in 1..T1, j in 1..T2}
		{
			if DD[i,j]=0 then 
				{let  D[i,j]:=1;}
			else
				{let  D[i,j]:=0;}
		}

		problem MAX1; 
		option solver cplex; 
		#option cplex_options mipgap=0.001;
		solve MAX1;

			printf"\n %10.3f \", n >>glow_max.txt;
			printf"\ %10.3f \", (B-C-1)/sqrt(n)>> glow_max.txt;

		problem MIN1;  
		option solver cplex; 
		#option cplex_options mipgap=0.001;
		solve MIN1;

			printf"\n %10.3f \", n >>glow_min.txt;
			printf"\ %10.3f \", (B-C-1)/sqrt(n)>> glow_min.txt;
let n:=n+1;
}